LIBRARY ieee;
USE ieee.std_logic_1164.all;

<?
@entityName=func(elem) {
    if (elem.Bits=1)
        return="MUX_GATE_"+elem.'Selector Bits';
    else
        return="MUX_GATE_BUS_"+elem.'Selector Bits';
};
name=entityName(elem);
inputs=1<<elem.'Selector Bits';

if (elem.Bits=1)
    dataType=type(elem.Bits);
else
    dataType="std_logic_vector ((Bits-1) downto 0)";

?>

entity <?=name?> is
<? beginGenericPort();?>
  <? if (elem.Bits>1) { ?>
  generic ( Bits : integer ); <? registerGeneric("Bits");?>
  <? } ?>
  port (
    PORT_out: out <?=dataType?>;
    PORT_sel: in <?=type(elem.'Selector Bits')?>;
    <? for (n=0;n<inputs;n++) { ?>
    PORT_in_<?=n?>: in <?=dataType if (n<inputs-1) print(";"); }?> );
  <? endGenericPort();?>
end <?=name?>;

architecture <?=name?>_arch of <?=name?> is
begin
  with PORT_sel select
    PORT_out <=
      <? for (n=0;n<inputs;n++) { ?>
      PORT_in_<?=n?> when <?=value(n, elem.'Selector Bits') ?>,
      <? }
      if (elem.Bits>1)
        print("(others => '0')");
      else
        print(value(0, elem.Bits));
      ?> when others;
end <?=name?>_arch;
