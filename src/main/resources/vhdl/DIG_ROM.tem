LIBRARY ieee;
USE ieee.std_logic_1164.all;
use IEEE.NUMERIC_STD.ALL;
<?
    if (elem.Label="")
        panic("Every ROM needs a unique label!");

    entityName="DIG_ROM_"+elem.Label;
?>

entity <?=entityName?> is
  port (
    PORT_D: out <?=type(elem.Bits)?>;
    PORT_A: in <?=type(elem.AddrBits)?>;
    PORT_sel: in std_logic );
end <?=entityName?>;

architecture <?=entityName?>_arch of <?=entityName?> is
  type mem is array ( 0 to <?=sizeOf(elem.Data)-1?>) of <?=type(elem.Bits)?>;
  constant my_Rom : mem := (
    <?

    len=sizeOf(elem.Data);
    col=0;
    for (i=0;i<len;i++) {
        print(value(elem.Data[i],elem.Bits));
        if (i<len-1) {
            print(", ");
        }
        col++;
        if (col=6) {
          col=0;
          print("\n    ");
        }
    }

  ?>);
begin
  process (PORT_A, PORT_sel)
  begin
    if PORT_sel='0' then
      PORT_D <= <? if (elem.Bits>1) {?>(others => 'Z')<? } else {?>'Z'<? } ?>;
    elsif PORT_A > <?=value(sizeOf(elem.Data)-1,elem.AddrBits)?> then
      PORT_D <= <?=zero(elem.Bits)?>;
    else
      PORT_D <= my_rom(to_integer(unsigned(PORT_A)));
    end if;
  end process;
end <?=entityName?>_arch;