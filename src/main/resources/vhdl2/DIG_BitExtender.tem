LIBRARY ieee;
USE ieee.std_logic_1164.all;

<? if (elem.inputBits>1) {
     entityName:="DIG_BitExtender";?>

entity DIG_BitExtender is
  generic ( inputBits  : integer;  <? vhdl.registerGeneric("inputBits");?>
            outputBits : integer); <? vhdl.registerGeneric("outputBits");?>
  port (
    in: in std_logic_vector ((inputBits-1) downto 0);
    out: out std_logic_vector ((outputBits-1) downto 0) );
end DIG_BitExtender;

architecture DIG_BitExtender_arch of DIG_BitExtender is
begin
    out((inputBits-2) downto 0) <= in((inputBits-2) downto 0);
    out((outputBits-1) downto (inputBits-1)) <= (others => in(inputBits-1));
end DIG_BitExtender_arch;
<?
   } else {
      entityName:="DIG_BitExtenderSingle";
?>
entity DIG_BitExtenderSingle is
  <? vhdl.beginGenericPort();?>
  generic ( outputBits : integer); <? vhdl.registerGeneric("outputBits");?>
  port (
    in: in std_logic;
    out: out std_logic_vector ((outputBits-1) downto 0) );
  <? vhdl.endGenericPort();?>
end DIG_BitExtenderSingle;

architecture Behavioral of DIG_BitExtenderSingle is
begin
    out((outputBits-1) downto 0) <= (others => in);
end Behavioral;
<? } ?>

